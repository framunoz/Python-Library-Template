# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  create:
    branches: [ "main" ]
    tags: [ '**' ]

jobs:
  linux:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        python -m pytest --durations=20  -v --doctest-modules --color=yes --cov=./ --cov-report=xml
    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v3

  macos:

    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        python -m pytest --durations=20  -v --doctest-modules --color=yes

  windows:

    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: RC.exe
      run: |
        function Invoke-VSDevEnvironment {
        $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
            $installationPath = & $vswhere -prerelease -legacy -latest -property installationPath
            $Command = Join-Path $installationPath "Common7\Tools\vsdevcmd.bat"
          & "${env:COMSPEC}" /s /c "`"$Command`" -no_logo && set" | Foreach-Object {
                if ($_ -match '^([^=]+)=(.*)') {
                    [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
                }
            }
        }
        Invoke-VSDevEnvironment
        Get-Command rc.exe | Format-Table -AutoSize
    - name: Update pip
      run : |
        python -m pip install --upgrade pip setuptools
        # python -m pip install cython  # Maybe this is not necesary for now
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        # if( exist requirements.txt ) ( pip install -r requirements.txt )
    - name: Run tests
      run: |
        python -m pytest --durations=20  -v --doctest-modules --color=yes
  
